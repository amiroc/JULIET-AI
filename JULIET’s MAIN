# %% Celda de EJECUCI√ìN
# Cargar modelo
model = tf.keras.models.load_model('deforestation_detector.h5')

# Funci√≥n de procesamiento
def predict_deforestation(img_path):
    img = tf.keras.preprocessing.image.load_img(
        img_path, target_size=(224, 224))
    img_array = tf.keras.preprocessing.image.img_to_array(img)
    img_array = tf.expand_dims(img_array, 0)
    img_array = tf.keras.applications.mobilenet_v2.preprocess_input(img_array)
    
    prediction = model.predict(img_array)
    return prediction[0][0]

# Subir imagen
uploaded = files.upload()

# Realizar predicci√≥n
for fn in uploaded.keys():
    prob = predict_deforestation(fn)
    print(f"\nImagen analizada: {fn}")
    print(f"Probabilidad de deforestaci√≥n: {prob:.2%}")
    
    # Mostrar imagen
    display(Image(fn, width=300))
    
    # Interpretar resultados
    if prob > 0.7:
        print("üö® ALERTA: Zona probablemente deforestada")
    elif prob > 0.4:
        print("‚ö†Ô∏è Advertencia: Posibles signos de deforestaci√≥n")
    else:
        print("‚úÖ √Årea boscosa en buen estado")
